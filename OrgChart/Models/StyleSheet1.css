--functions create function fn_has_child(@employee_id int) returns int as begin declare @count_reporties int select @count_reporties=count(Employee.EmployeeId) from Employee where ManagerEmployeeCode = @employee_id and Active = 'True' if(@count_reporties>0) set @count_reporties = 1 return @count_reporties end create function fn_has_parent(@employee_id int) returns int as begin declare @count_reporties int select @count_reporties=count(Employee.EmployeeId) from Employee where EmployeeId = @employee_id and ManagerEmployeeCode is not null and RoleName< > 'CEO' and Active = 'True' return @count_reporties end create function fn_has_sibling(@employee_id int) returns int as begin declare @count_reporties int select @count_reporties=count(Employee.EmployeeId) from Employee where EmployeeId< > @employee_id and ManagerEmployeeCode= (select ManagerEmployeeCode from Employee where EmployeeId= @employee_id and RoleName<>'CEO') and Active = 'True' if(@count_reporties>0) set @count_reporties = 1 return @count_reporties end select dbo.fn_relationship(10001); alter function fn_relationship(@employee_id int) returns varchar(3) as begin declare @relationship int if(dbo.fn_has_child(@employee_id)=1 and dbo.fn_has_parent(@employee_id)=1 and dbo.fn_has_sibling(@employee_id)=1) set @relationship = 111 if(dbo.fn_has_child(@employee_id)=1 and dbo.fn_has_parent(@employee_id)=0 and dbo.fn_has_sibling(@employee_id)=0) set @relationship = 001 if(dbo.fn_has_child(@employee_id)=0 and dbo.fn_has_parent(@employee_id)=1 and dbo.fn_has_sibling(@employee_id)=1) set @relationship = 110 if(dbo.fn_has_child(@employee_id)=0 and dbo.fn_has_parent(@employee_id)=1 and dbo.fn_has_sibling(@employee_id)=0) set @relationship = 100 if(dbo.fn_has_child(@employee_id)=1 and dbo.fn_has_parent(@employee_id)=1 and dbo.fn_has_sibling(@employee_id)=0) set @relationship = 101 if(dbo.fn_has_child(@employee_id)=0 and dbo.fn_has_parent(@employee_id)=0 and dbo.fn_has_sibling(@employee_id)=0) set @relationship = 000 return @relationship end
